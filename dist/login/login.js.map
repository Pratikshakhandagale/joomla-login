{"version":3,"file":"login.js","sourceRoot":"","sources":["../../src/app/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC1C,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AACrF,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAOzD;IAOE,mBACS,SAA0B,EAC1B,OAAsB,EACtB,SAAoB,EACpB,aAA4B,EAC5B,EAAe;QALxB,iBAoBC;QAnBQ,cAAS,GAAT,SAAS,CAAiB;QAC1B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,kBAAa,GAAb,aAAa,CAAe;QAC5B,OAAE,GAAF,EAAE,CAAa;QAVxB,aAAQ,GAAY,IAAI,CAAC;QAWvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,IAAI,CAClC,UAAC,IAAS;YACR,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7C,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC;aAC/C;QACH,CAAC,CACF,CAAA;IACH,CAAC;IAED,kCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAC1C,CAAC;IAED,6BAAS,GAAT;QACE,wCAAwC;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,OAAO,EAAE,CAAC,6BAA6B,CAAC;YACxC,QAAQ,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC,QAAQ,CAAC;YACvC,QAAQ,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAEK,2BAAO,GAAb;;;;;;;wBAEE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;6BAEzF,CAAA,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,CAAA,EAA/D,wBAA+D;wBAG7D,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,+DAA+D,CAAC;wBACrG,YAAY,GAAG,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,YAAY,GAAG,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;wBAElI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,IAAI;4BACvC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;wBAC9B,CAAC,CAAC,CAAC;wBACH,qBAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,IAAI,CACvD,UAAC,IAAS;gCAER,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;oCACrB,iCAAiC;iCAClC;qCACI;oCACH,KAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC;iCAChD;4BACH,CAAC,EAAE,UAAA,GAAG;gCACJ,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;4BAE3B,CAAC,CAAC,EAAA;;wBAZJ,SAYI,CAAC;;;wBAGL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAElC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;;;;;;KAE5C;IAED,gCAAY,GAAZ,UAAa,OAAe;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAlFU,SAAS;QALrB,SAAS,EAAE;QACX,SAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,cAAc;SAC5B,CAAC;yCASoB,eAAe;YACjB,aAAa;YACX,SAAS;YACL,aAAa;YACxB,WAAW;OAZb,SAAS,CAmFrB;IAAD,gBAAC;CAAA,AAnFD,IAmFC;SAnFY,SAAS","sourcesContent":["import { LoggerService } from './../logger.service';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\nimport { Validators, FormBuilder } from '@angular/forms';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: './login.html',\n})\nexport class LoginPage {\n  apiBase: any;\n  isCustom: boolean = true;\n  public customData: any;\n  datatobesend: any;\n  loginForm: any;\n  \n  constructor(\n    public toastCtrl: ToastController,\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public LoggerService: LoggerService,\n    public fb: FormBuilder) {\n    this.loginForm = this.fb.group({\n      siteurl: [\"\"],\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n\n    this.LoggerService.getConfigs().then(\n      (data: any)=> {        \n        if (data['custom_app']['LOGINURL'].length > 0) {\n          this.isCustom = false;\n          this.apiBase = data['custom_app']['LOGINURL'];\n        }\n      }\n    )\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n\n  demoLogin() {\n    //  this.navCtrl.push(AcademyComponent);\n    this.loginForm = this.fb.group({\n      siteurl: [\"http://app.cloudaccess.host\"],\n      username: [\"Ruby\", Validators.required],\n      password: [\"abcd1234\", Validators.required]\n    });\n  }\n\n  async doLogin() {\n\n    this.loginForm.value.siteurl = (this.isCustom) ? this.loginForm.value.siteurl : this.apiBase;\n\n    if (this.loginForm.valid || (!this.loginForm.valid && this.apiBase)) {\n      //this.navCtrl.setRoot(HomePage);\n\n      let url = this.loginForm.value.siteurl + \"/index.php?option=com_api&app=users&resource=login&format=raw\";\n      let datatobesend = 'username=' + this.loginForm.value.username + '&password=' + encodeURIComponent(this.loginForm.value.password);\n\n      this.LoggerService.getConfigs().then(data => {\n        console.log(' data ', data);\n      });\n      await this.LoggerService.postCall(url, datatobesend).then(\n        (data: any) => {\n\n          if (!data['err_code']) {\n            //this.navCtrl.setRoot(HomePage);\n          }\n          else {\n            this.presentToast('Invalid login credentials');\n          }\n        }, err => {\n          console.log('err ', err);\n\n        });\n\n    } else {\n      console.log(this.loginForm.valid);\n\n      this.presentToast('Please enter values');\n    }\n  }\n\n  presentToast(message: string) {\n    const toast = this.toastCtrl.create({\n      message: message,\n      duration: 3000\n    });\n    toast.present();\n  }\n}\n"]}